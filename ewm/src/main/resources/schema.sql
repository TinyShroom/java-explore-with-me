CREATE TABLE IF NOT EXISTS users (
  id bigint generated by default as identity PRIMARY KEY,
  name varchar(250) NOT NULL,
  email varchar(254) NOT NULL,
  CONSTRAINT UNIQUE_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
  id bigint generated by default as identity PRIMARY KEY,
  name varchar(250) NOT NULL,
  CONSTRAINT UNIQUE_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
  id bigint generated by default as identity PRIMARY KEY,
  lat float NOT NULL,
  lon float NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
  id bigint generated by default as identity PRIMARY KEY,
  annotation varchar(2000) NOT NULL,
  category_id bigint NOT NULL REFERENCES categories(id),
  created_on timestamp NOT NULL,
  description varchar(7000) NOT NULL,
  event_date timestamp NOT NULL,
  user_id bigint NOT NULL REFERENCES users(id),
  location_id bigint NOT NULL REFERENCES locations(id),
  paid boolean NOT NULL,
  participant_limit int NOT NULL,
  published_on timestamp,
  request_moderation boolean NOT NULL,
  state varchar NOT NULL,
  title varchar(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS participation_request (
  id bigint generated by default as identity PRIMARY KEY,
  created timestamp NOT NULL,
  event_id bigint NOT NULL REFERENCES events(id),
  user_id bigint NOT NULL REFERENCES users(id),
  status varchar NOT NULL,
  CONSTRAINT UNIQUE_USER_EVENT UNIQUE (event_id, user_id)
);

CREATE TABLE IF NOT EXISTS compilations (
  id bigint generated by default as identity PRIMARY KEY,
  pinned boolean NOT NULL,
  title varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
  id bigint generated by default as identity PRIMARY KEY,
  compilation_id bigint NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
  event_id bigint NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  CONSTRAINT UNIQUE_COMPILATION_EVENT UNIQUE (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS user_subscriptions (
  id bigint generated by default as identity PRIMARY KEY,
  user_id bigint NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  subscription_id bigint NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT self_subscription CHECK (user_id <> subscription_id),
  CONSTRAINT unique_user_subscription UNIQUE (user_id, subscription_id)
);